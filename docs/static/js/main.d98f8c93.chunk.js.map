{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","image","key","GifExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAjBgB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIII,MAAMF,GAJV,cAIbG,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAKA,KCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAoBrC,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAhB,GACFc,EAAS,CACLf,KAAMC,EACNY,SAAS,SAIvB,CAACpB,IAGIqB,EDhByBI,CAAYzB,GAA/Ba,EAHwB,EAG7BN,KAAYa,EAHiB,EAGjBA,QAEpB,OACI,oCACA,gCAAOpB,EAAP,KACCoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEVH,EAAOJ,KAAI,SAAAiB,GAAK,OACb,kBAAC,EAAD,eACIC,IAAKD,EAAMf,IACPe,UEdXE,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAY9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAAQU,KAAK,SAASmC,QAbZ,SAACxC,GAIfL,GAAc,SAAAS,GAAI,4BAAQA,GAAR,CAAa,yBAS3B,aACA,4BACKmC,EAAWpB,KAAI,SAAAT,GACZ,OAAO,kBAAC,EAAD,CAAS2B,IAAM3B,EAAWA,SAAWA,UClBhE+B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d98f8c93.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleOnInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleOnSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(InputValue.trim().length > 2){\r\n            setCategories(cats => [InputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={ InputValue }\r\n                onChange={ handleOnInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","\r\nexport const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nELnpbOpjOlL8qlrDYM3zx2aJu6bbOqe`;\r\n\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title,url }) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images,loading } = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n        <h3> { category } </h3>\r\n        {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n        <div className='card-grid'>\r\n\r\n            {images.map(image=>(\r\n                <GifGridItem\r\n                    key={image.id}\r\n                    {...image}\r\n                />\r\n             ))}\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(gifs=>{\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                })\r\n        })\r\n\r\n    },[category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React,{ useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    const handleApp = (e) =>{\r\n        // setCategories('Hunter X Hunter'); Malo\r\n        // setCategories([...categories,'Hunter X Hunter']);\r\n\r\n        setCategories(cats => [...cats,'Hunter X Hunter'])\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            <button type=\"button\" onClick={ handleApp }>Categoria</button>\r\n            <ol>\r\n                {categories.map(category=>{\r\n                    return <GifGrid key={ category } category={ category }/>\r\n                })}\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}